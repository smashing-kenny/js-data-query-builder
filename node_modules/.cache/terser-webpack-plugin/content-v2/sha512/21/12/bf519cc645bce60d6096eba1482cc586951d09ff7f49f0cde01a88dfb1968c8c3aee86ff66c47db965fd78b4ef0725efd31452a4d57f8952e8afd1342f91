{"code":"!function(t){var e={};function n(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,s){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)n.d(s,r,function(e){return t[e]}.bind(null,r));return s},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=0)}([function(t,e,n){\"use strict\";n.r(e),n.d(e,\"default\",(function(){return r}));class s extends class{constructor(){this.expressions=[],this.disjunction=!1}not(){return this.disjunction=!0,this}equal(t,e){return this.expressions.push({TYPE:\"EQUAL\",NAME:t,CONSTANT:e,DISJUNCTION:this.disjunction}),this.disjunction=!1,this}greater(t,e){return this.expressions.push({TYPE:\"GREATER\",NAME:t,CONSTANT:e,DISJUNCTION:this.disjunction}),this.disjunction=!1,this}less(t,e){return this.expressions.push({TYPE:\"LESS\",NAME:t,CONSTANT:e,DISJUNCTION:this.disjunction}),this.disjunction=!1,this}greaterEqual(t,e){return this.expressions.push({TYPE:\"GREATER_EQUAL\",NAME:t,CONSTANT:e,DISJUNCTION:this.disjunction}),this.disjunction=!1,this}lessEqual(t,e){return this.expressions.push({TYPE:\"LESS_EQUAL\",NAME:t,CONSTANT:e,DISJUNCTION:this.disjunction}),this.disjunction=!1,this}}{constructor(t,e){super(),this.url=t,this.interfaces=e}returning(t){return this.returning=t,this}execute(){const t={STATEMENT:\"SELECT\",EXPRESSIONS:this.expressions,RETURNING:this.returning,INTERFACE:this.interfaces},e=this.url;return new Promise((n,s)=>{const r=new XMLHttpRequest;r.open(\"POST\",e,!0),r.responseType=\"json\",r.onload=()=>{n(r.response)},r.onerror=()=>{s(r.statusText)},r.send(JSON.stringify(t))})}}class r{constructor(t){this.url=t}select(t){return new s(this.url,t.INTERFACE).returning(t.RETURNING)}}}]);","extractedComments":[]}